// various configs possible
// [
//   {
//     "type": "server", // used to define a server
//     "access_log": "", // where to store the network logs
//     "error_log": { // where to store the error logs
//       "location": "",
//       "level": "" // severity above which errors should be logged
//     },
//     gzip: {
//       on: true/false, // if this block exists, the it is on,
//       types: [
//         // what type of content types to compress
//         "text/plain",
//         "text/css",
//         "application/json",
//         "application/javascript",
//       ],
//       level: 0 - 9 // 0 being the least compression and therefore fastest and vice versa
//       min_length: 255, // the length of the request after which it should be compressed
//       buffers: 2, // sets the number of buffers to be used for compression(???)
//     }, // whether to compress the http response or not (???)
//   },
//   {
//     type: "upstream" // used to define the servers in a host machine for lb scenarios
//     name: "ustream_name" // only upstream name since this can be used to define in a lb scenario
//     servers: [
//       {
//         "location": "", // where to send it to
//         "additional_params": [
//           "weight": 5, // for weighted loadbalancers
//           "max_conns": "",
//           "max_fails": "",
//           "down": true,
//           "backup": true,
//           //more are from nginx commercial license
//         ]
//       }
//     ]
//   }
// ]

[
  {
    // lets created this for now
    //
    "type": "http/events/stream",
    "specs": {
      "location": [
        {
          "match": "some regex or suburl",
          "actions": [
            {
              "action": "adding, deleting, rewriting a header || "
            }
          ]
        }
      ]
    }
  }
]
